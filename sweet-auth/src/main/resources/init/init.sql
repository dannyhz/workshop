CREATE TABLE SWEET_AUTH_TENANT  (
   TENANT_ID            INTEGER           NOT NULL     PRIMARY KEY,
   TENANT_PARENT_ID     INTEGER,
   TENANT_CODE          VARCHAR(16)		  NOT NULL,
   TENANT_SHORTNAME     VARCHAR(32),
   TENANT_NAME          VARCHAR(128),
   TENANT_CONTACTER     VARCHAR(64),
   TENANT_PHONE         VARCHAR(16),
   TENANT_ADDRESS       VARCHAR(256),
   TENANT_CREATEDON     DATE			  DEFAULT sysdate,
   TENANT_MODIFIEDON    DATE			  DEFAULT sysdate,
   TENANT_STATUS        INTEGER			  DEFAULT 1,
   TENANT_ISDEL         INTEGER			  DEFAULT 0
);

CREATE TABLE SWEET_AUTH_ORG  (
   ORG_ID            	INTEGER           NOT NULL     PRIMARY KEY,
   ORG_PARENT_ID     	INTEGER,
   ORG_CODE          	VARCHAR(16),
   ORG_NAME     		VARCHAR(128)	  NOT NULL,
   ORG_RESPONSIBLE_ID   INTEGER,
   ORG_SERIALNO			INTEGER,
   ORG_TENANT_ID    	INTEGER,
   ORG_CREATEDON     	DATE			  DEFAULT sysdate,
   ORG_MODIFIEDON    	DATE			  DEFAULT sysdate,
   ORG_STATUS           INTEGER			  DEFAULT 1,
   ORG_ISDEL         	INTEGER			  DEFAULT 0
);
COMMENT ON COLUMN SWEET_AUTH_ORG.ORG_RESPONSIBLE_ID IS '组织的负责人ID';

CREATE TABLE SWEET_AUTH_USER  (
   USER_ID               INTEGER           NOT NULL     PRIMARY KEY,
   USER_CODE             VARCHAR(16)	   NOT NULL,
   USER_NAME             VARCHAR(32)	   NOT NULL,
   USER_PINGYIN          VARCHAR(32),
   USER_PASSWORD         VARCHAR(128),
   USER_FORCEMODIFYPSW   INTEGER,
   USER_MOBILE     		 VARCHAR(16),
   USER_EMAIL     		 VARCHAR(64),
   USER_IMG     		 VARCHAR(128),
   USER_SIGN    		 VARCHAR(512),
   USER_ROLE    		 INTEGER,
   USER_INIT    		 INTEGER,
   USER_TENANT_ID    	 INTEGER,
   USER_ORG_ID    		 INTEGER,
   USER_LOCKTIME         DATE,
   USER_CREATEDON     	 DATE				DEFAULT sysdate,
   USER_MODIFIEDON    	 DATE			    DEFAULT sysdate,
   USER_STATUS           INTEGER			DEFAULT 1,
   USER_ISDEL         	 INTEGER			DEFAULT 0
);
COMMENT ON COLUMN SWEET_AUTH_USER.USER_INIT IS '0，普通用户；1，初始化用户（无法删除）';
COMMENT ON COLUMN SWEET_AUTH_USER.USER_SIGN IS '用户签名';
COMMENT ON COLUMN SWEET_AUTH_USER.USER_ROLE IS '1，平台管理员；2，租户管理员；3，用户';

CREATE TABLE SWEET_AUTH_MENU
(
  MENU_ID      			INTEGER 			NOT NULL     PRIMARY KEY,
  MENU_CODE 			VARCHAR(64) 		comment '菜单code',
  MENU_PARENT_ID   		INTEGER,
  MENU_NAME    			VARCHAR(64) 		NOT NULL,
  MENU_TYPE 			INTEGER, 
  MENU_AUTH_LEVEL      	INTEGER 			DEFAULT 3,
  MENU_VISIBILITY   	INTEGER				DEFAULT 0,
  MENU_SERIAL_NO    	INTEGER 			DEFAULT 1,
  MENU_ICONCLASS		VARCHAR(64),
  MENU_HREF				VARCHAR(128),
  MENU_ITEM_ID      	INTEGER,
  MENU_CREATEDON     	DATE				DEFAULT sysdate,
  MENU_MODIFIEDON    	DATE			    DEFAULT sysdate,
  MENU_STATUS           INTEGER				DEFAULT 1
);
COMMENT ON COLUMN SWEET_AUTH_MENU.MENU_TYPE IS '1，框架页面；2，内部页面；3，功能';
COMMENT ON COLUMN SWEET_AUTH_MENU.MENU_HREF IS '对应页面的Angular地址';
COMMENT ON COLUMN SWEET_AUTH_MENU.MENU_AUTH_LEVEL IS '对应于用户角色，1，表示仅平台管理员访问；2，表示仅租户管理员访问；3，表示用户';
COMMENT ON COLUMN SWEET_AUTH_MENU.MENU_VISIBILITY IS '0，需要管理员分配后可见；1，无需管理员分配，普通用户都有的功能；';

CREATE TABLE SWEET_AUTH_ITEM
(
  ITEM_ID      			INTEGER 			NOT NULL     PRIMARY KEY,
  ITEM_TAB    			VARCHAR(50),
  ITEM_DESCRIPTION 		VARCHAR(1024),
  ITEM_URL         		VARCHAR(256) 		NOT NULL,
  ITEM_REQUESTMETHOD	VARCHAR(6),
  ITEM_CREATEDON     	DATE				DEFAULT sysdate,
  ITEM_MODIFIEDON    	DATE				DEFAULT sysdate
);
COMMENT ON COLUMN SWEET_AUTH_ITEM.ITEM_TAB IS '功能的标签，用于做分类用，辅助做查询过滤';

CREATE TABLE SWEET_AUTH_ITEM_PCK
(
  PCK_ID       			INTEGER 			NOT NULL     PRIMARY KEY,
  PCK_NAME     			VARCHAR(50) 		NOT NULL,
  PCK_TENANT_ID    		INTEGER,
  PCK_MENU_ID 			VARCHAR(1024) 		NOT NULL,
  PCK_CREATEDON     	DATE				DEFAULT sysdate,
  PCK_MODIFIEDON    	DATE				DEFAULT sysdate
);
COMMENT ON COLUMN SWEET_AUTH_ITEM_PCK.PCK_MENU_ID IS '功能组包含的菜单，多个用逗号隔开';

CREATE TABLE SWEET_AUTH_USER_PCK_MAP
(
  ID       				INTEGER 			NOT NULL     PRIMARY KEY,
  USER_ID     			INTEGER 			NOT NULL,
  PCK_ID				INTEGER				NOT NULL,
  TENANT_ID    			INTEGER				NOT NULL,
  CREATEDON     		DATE				DEFAULT sysdate
);

CREATE TABLE SWEET_AUTH_TENANT_MENU_UNVISIBLE
(
  ID       				INTEGER 			NOT NULL     PRIMARY KEY,
  TENANT_ID     		INTEGER 			NOT NULL,
  MENU_ID				INTEGER				NOT NULL,  
  CREATEDON     		DATE				DEFAULT sysdate
);


CREATE SEQUENCE seq_id START WITH 100000  INCREMENT BY 1;



