<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
	http://www.springframework.org/schema/beans classpath:xsd/spring-beans-4.1.xsd">
    
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!-- 主要用于扩展插件或调整一些默认配置 -->
	    <property name="configLocation" value="classpath:conf/mybatis.xml" />
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 统一规范SQL映射的位置 -->
		<property name="mapperLocations" value="classpath*:cn/**/dao/*.xml" />
		<!-- 需定义别名的类（bean）扫描路径 ，别名默认为其类名-->
		<property name="typeAliasesPackage" value="${aliases.modelpackages}" />
	</bean>
	
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
  		<!-- 统一规范需要扫描的DAO接口的位置 -->
  		<property name="basePackage" value="cn.evun.sweet.core.mybatis,cn/evun/**/dao,cn/jyc/**/dao" />
  		<!-- 多数据源情况下，需要配置该项 -->
  		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
  		<property name="properties">
	        <value>
	            mappers=tk.mybatis.mapper.common.Mapper
	        </value>
	    </property>
	</bean>
	
	<!-- 直接在代码中注入后使用sqlSession操作 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 
		直接在代码中使用sqlSession（支持批量） 例如：
		for (User user : users) {
     		sqlSessionBatch.insert("org.mybatis.spring.sample.mapper.UserMapper.insertUser", user);
   		}
	-->
	<bean id="sqlSessionBatch" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg index="0" ref="sqlSessionFactory" />
  		<constructor-arg index="1" value="BATCH" />
	</bean>

</beans>